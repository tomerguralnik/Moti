import socket
import click
import datetime
from .utils import Connection
from .utils import Reader
from .utils import Hello, Config, Snapshot
from .utils import Config_handler

@click.group()
def client():
    pass

def reader_to_server(snapshot):
    """
    :param snapshot: a snapshot as generated by reader
    :type snapshot: ReaderSnapshot

    :return: client-server protocol snapshot
    :rtype: Snapshot
    """
    timestamp = snapshot.timestamp
    translation = snapshot.translation
    rotation = snapshot.rotation
    color_image = snapshot.color_image
    color_image = Snapshot.Image(color_image.height, color_image.width,
                                color_image.image, color_image.fmt)
    depth_image = snapshot.depth_image
    depth_image = Snapshot.Image(depth_image.height, depth_image.width,
                                depth_image.image, depth_image.fmt)
    feelings = snapshot.feelings
    return Snapshot(timestamp, translation, rotation, color_image, depth_image, feelings)  
                                  
                           
def upload_sample(host = '127.0.0.1', port = '8000', path = 'sample.mind.gz', config = None):
    """
    If a config file is present set all other params to values
    specified in config file

    This function uploads all snapshots in the provided path to the server

    :param host: ip of server, defaults to '127.0.0.1'
    :type host: str(,optional)
    :param port: port of server, defaults to '8000'
    :type port: int or str(,optional)
    :param path: path to snapshots, defaults to 'sample.mind.gz'
    :type path: str(,optional)
    :param config: a name of config file, defaults to None
    :type config: str(,optional)
    """
    if config:
        config = Config_handler(config, 'client')
        host = config.host
        port = config.port
        path = config.path
    address = (host, int(port))
    sender = socket.socket()
    sender.connect(address)
    conn = Connection(sender)
    reader = Reader(path, 'proto_reader')
    hello = Hello(reader.user_id, reader.user_name, datetime.datetime.strptime(reader.birth_date,'%Y-%m-%d %H:%M:%S'), reader.gender)
    for snapshot in reader:
        serv_snap = reader_to_server(snapshot)
        conn.send_message(hello.serialize())
        print('sent hello')
        config = Config.deserialize(conn.receive_message())
        print('got config')
        conn.send_message(serv_snap.serialize(config.fields))
        print('done snapshot')
    print('done')
    conn.close()

@client.command(name = 'upload-sample')
@click.option('--host', '-h', help='Address of server', default = '127.0.0.1')
@click.option('--port', '-p', help='User id of snapshot', default = '8000')
@click.option('--config', '-c', help = 'Config file', default = None)
@click.argument('path', nargs = -1, type = click.STRING)
def cli_upload_sample(path = 'sample.mind.gz', host = '127.0.0.1', port = '8000', config = None):
    upload_sample(host, port, path, config)

if __name__ == '__main__':
    client()
